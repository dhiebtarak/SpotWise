import asyncio
from parking_space_detector import ParkingSpaceDetector
import time
import os
async def run_detector(detector):
    start_time = time.time()
    await detector.process_video()
    elapsed_time = time.time() - start_time  # Calculate elapsed time
    seconds = int(elapsed_time)
    print("Elapsed time (seconds):", seconds)

async def main():
    current_dir = os.getcwd()
    cameras_dir = os.path.join(current_dir, "Cameras")
    areas_with_ids = {
        "cam1": {"A01": [(432, 95), (304, 130), (431, 186), (556, 139)], "A02": [(466, 130), (457, 215), (678, 173), (668, 87)], "A03": [(675, 131), (633, 228), (822, 252), (843, 140)], "A04": [(854, 141), (813, 243), (1010, 269), (1026, 152)], "A05": [(1047, 149), (1024, 268), (1254, 297), (1251, 148)], "A06": [(188, 176), (222, 272), (24, 330), (17, 223)], "A07": [(31, 309), (102, 430), (478, 280), (332, 197)], "A08": [(469, 217), (108, 407), (436, 533), (730, 281)], "A09": [(708, 261), (505, 475), (952, 626), (1015, 316)], "A10": [(938, 606), (1262, 629), (1262, 358), (1005, 303)]},
        "cam2": {"B01": [(115, 338), (16, 505), (198, 636), (387, 363)], "B02": [(398, 347), (253, 573), (672, 570), (669, 345)], "B03": [(670, 364), (683, 570), (1088, 552), (935, 351)], "B04": [(964, 362), (1259, 340), (1272, 620), (1166, 624)], "B05": [(345, 230), (246, 325), (462, 327), (511, 223)], "A11": [(502, 219), (471, 314), (644, 318), (638, 215)], "A12": [(657, 226), (661, 315), (858, 314), (804, 231)], "A13": [(804, 235), (851, 324), (1037, 320), (944, 239)], "A14": [(1051, 320), (949, 225), (1100, 218), (1233, 316)]},
        "cam3": {"C01": [(32, 258), (35, 460), (306, 255), (166, 212)], "C02": [(337, 228), (546, 247), (399, 434), (94, 427)], "C03": [(550, 259), (773, 267), (726, 504), (376, 452)], "C04": [(782, 266), (735, 507), (1148, 531), (1034, 287)], "C05": [(1131, 149), (1155, 256), (1271, 261), (1259, 165)], "C06": [(954, 136), (973, 241), (1158, 249), (1102, 138)], "C07": [(800, 147), (793, 228), (970, 239), (951, 147)], "C08": [(794, 135), (782, 229), (621, 219), (663, 138)], "A15": [(665, 128), (609, 217), (467, 203), (546, 127)]},
        "cam4": {"D01": [(164, 137), (141, 239), (359, 224), (337, 113)], "D02": [(348, 117), (363, 216), (559, 198), (489, 115)], "D03": [(520, 108), (562, 190), (702, 183), (656, 96)], "D04": [(682, 89), (728, 174), (867, 157), (787, 77)], "D05": [(820, 87), (893, 170), (1007, 152), (905, 58)], "D06": [(54, 387), (40, 610), (513, 607), (416, 267)], "D07": [(415, 247), (506, 610), (901, 497), (663, 211)], "D08": [(960, 225), (1246, 394), (953, 485), (693, 253)], "D09": [(1263, 312), (1202, 386), (879, 216), (1056, 189)], "D10": [(1265, 290), (1266, 207), (1213, 181), (1071, 204)]},
        "cam5": {"B06": [(458, 68), (581, 123), (674, 91), (598, 43)], "B07": [(692, 56), (587, 100), (718, 145), (808, 91)], "B08": [(755, 134), (917, 174), (981, 89), (861, 60)], "B09": [(944, 172), (1166, 211), (1177, 120), (1000, 95)], "B10": [(1091, 625), (1179, 261), (867, 213), (641, 476)], "B11": [(602, 200), (827, 247), (636, 457), (367, 350)], "B12": [(560, 209), (311, 325), (169, 223), (439, 144)], "B13": [(43, 212), (142, 275), (396, 170), (271, 126)]},
        "cam6": {"C09": [(515, 151), (212, 227), (159, 120), (430, 60)], "C10": [(549, 99), (299, 180), (484, 262), (724, 151)], "C11": [(773, 345), (958, 161), (732, 107), (531, 270)], "C12": [(809, 357), (1235, 474), (1254, 208), (967, 153)], "C13": [(1048, 134), (1248, 159), (1256, 90), (1091, 64)], "D11": [(945, 38), (1062, 49), (1038, 134), (880, 115)], "D12": [(713, 70), (845, 112), (921, 79), (813, 45)], "D13": [(786, 89), (779, 40), (617, 45), (623, 97)]}
    }
    detectors = []
    num_cameras = 6
    video_paths = [os.path.join(cameras_dir, f"cam{i}.mp4") for i in range(1,  num_cameras + 1)]
    json_file_paths = [os.path.join(current_dir, f"spot_status_cam{i}.json") for i in range(1,  num_cameras + 1)]
    
    for video_path, json_file_path in zip(video_paths, json_file_paths):
        # Extract the camera number from the video path
        cam_number = os.path.basename(video_path).split(".")[0][-1]

        # Choose appropriate area_ids based on the camera number
        area_ids = areas_with_ids[f"cam{cam_number}"]
        detector = ParkingSpaceDetector(
            model_path='yolov5su.pt',
            video_path=video_path,
            json_file_path=json_file_path,
            classes_path="labels.txt",
            area_ids=area_ids,
            show=True
        )
        detectors.append(run_detector(detector))  # Append the coroutine
    await asyncio.gather(*detectors)
    elapsed_time = time.time() - start_time  # Calculate elapsed time
    seconds = int(elapsed_time)
    print("Elapsed time (seconds):", seconds)

if __name__ == "__main__":
    start_time = time.time()
    asyncio.run(main())


